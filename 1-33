#lang scheme

(define (accumulate combiner null-value term a next b)
  (if (> a b)
      null-value
      (combiner (accumulate combiner null-value term (next a) next b) (term a))))


(define (identity a) a)

(define (inc a) (+ a 1))

(define (mult a b) (* a b))

(define (sumit a b) (+ a b))


(define (f g)
  (g 2))

