#lang scheme

(define (make-vect x y)
  (cons x y))

(define (xcor-vect p)
  (car p))

(define (ycor-vect p)
  (cdr p))

(define (add-vect p q)
  (make-vect (+ (xcor-vect p) (xcor-vect q)) (+ (ycor-vect p) (ycor-vect q))))

(define (sub-vect p q)
  (make-vect (- (xcor-vect p) (xcor-vect q)) (- (ycor-vect p) (ycor-vect q))))

(define (scale-vect p var)
  (make-vect (* (xcor-vect p) var) (* (ycor-vect p) var))) 

(define a (make-vect 2 5))
(define b (make-vect 4 9))